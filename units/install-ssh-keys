#!/bin/bash

# Set variables for the KeePass database file and output files
DATABASE="$HOME/Nextcloud/kp/StefPass.kdbx"
# Temporary file for storing the KeePass database unlock key securely
TEMP_KEY_FILE=$(mktemp)

mkdir -p $HOME/.ssh

# Function to clean up the tkemporary file
cleanup() {
    rm -f "$TEMP_KEY_FILE"
}
trap cleanup EXIT

# Prompt the user for the KeePass master password
read -sp "Enter KeePass master password: " KEEPASS_PASSWORD
echo
printf "$KEEPASS_PASSWORD" > "$TEMP_KEY_FILE"

# Unlock the KeePass database and store the temporary unlock key
keepassxc-cli attachment-export --key-file "$TEMP_KEY_FILE" --no-password $DATABASE "Secure notes/id_ed25519 personal key stef@kindrobot.ca" id_ed25519 $HOME/.ssh/id_ed25519
chmod 600 $HOME/.ssh/id_ed25519
keepassxc-cli attachment-export --key-file "$TEMP_KEY_FILE" --no-password $DATABASE "Secure notes/id_ed25519 personal key stef@kindrobot.ca" id_ed25519.pub $HOME/.ssh/id_ed25519.pub
keepassxc-cli attachment-export --key-file "$TEMP_KEY_FILE" --no-password $DATABASE "Wikimedia/Wikipedia Prod Keys" wmf_prod.key $HOME/.ssh/wmf_prod.key
chmod 600 $HOME/.ssh/wmf_prod.key
keepassxc-cli attachment-export --key-file "$TEMP_KEY_FILE" --no-password $DATABASE "Wikimedia/Wikipedia Prod Keys" wmf_prod.pub $HOME/.ssh/wmf_prod.pub

# Verify if the database was unlocked successfully
if [ $? -ne 0 ]; then
    echo "Failed to unlock KeePass database."
    cleanup
    exit 1
fi
