#!/usr/bin/env bash

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
units_dir="$DIR/units"
visited=()

# Function to list all units and their descriptions
list_units() {
    for unit in "$units_dir"/*; do
        source "$unit"
        unit_name=$(basename "$unit")
        echo -e "\e[1;94m$unit_name\e[0m: $(description)"
    done
}

# Function to resolve dependencies using Depth First Search (DFS)
resolve_dependencies() {
    set -eu
    local unit_name="$1"
    local unit_path="$units_dir/$unit_name"

    if [[ " ${visited[@]} " =~ " ${unit_name} " ]]; then
        return
    fi

    visited+=("$unit_name")

    if [[ -f "$unit_path" ]]; then
        source "$unit_path"
        for dep in $(dependencies); do
            resolve_dependencies "$dep"
        done
        source "$unit_path"
        echo -e "\e[1;97m===== \e[1;94m$unit_name\e[1;97m =====\e[0m"
        "main"
        if [[ $? -ne 0 ]]; then
            echo -e "\e[1;31mError\e[0m: Execution of '\e[1;94m$unit_name\e[0m' failed." >&2
            exit 1
        fi
    else
        echo "Error: Unit '$unit_name' not found or not executable." >&2
        exit 1
    fi
}

# Main script logic
if [[ $# -eq 0 ]]; then
    # No arguments: list all units and their descriptions
    list_units
else
    # Argument provided: resolve dependencies and run the specified unit
    unit_to_run="$1"
    # strip leading or "units/" if present
    unit_to_run="${unit_to_run#units/}"
    resolve_dependencies "$unit_to_run"
fi
